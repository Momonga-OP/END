name: END Discord Bot Deployment

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/50 * * * *'  # Runs every 50 minutes to keep the bot alive
  workflow_dispatch:       # Allows manual triggering from GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: No longer installing FFmpeg as it's not needed
      - name: Echo system info
        run: |
          echo "Running on GitHub Actions runner"

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Create keep-alive script
      - name: Create keep-alive script
        run: |
          cat > keep_alive.py << 'EOL'
          import time
          import threading
          import requests
          import os
          import sys
          
          def ping_vercel():
              """Ping the Vercel deployment to keep it warm"""
              try:
                  url = "https://end-safeing.vercel.app"
                  response = requests.get(url)
                  print(f"Pinged {url}: {response.status_code}")
              except Exception as e:
                  print(f"Error pinging Vercel: {e}")
          
          def keep_alive():
              """Send periodic pings to keep the service alive"""
              while True:
                  ping_vercel()
                  time.sleep(300)  # Ping every 5 minutes
          
          # Start the keep-alive thread
          keep_alive_thread = threading.Thread(target=keep_alive, daemon=True)
          keep_alive_thread.start()
          EOL

      # Step 6: Create .env file from secrets
      - name: Create .env file
        run: |
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "GUILD_ID=1263938704670593085" >> .env
          echo "PING_DEF_CHANNEL_ID=1369382571363930174" >> .env
          echo "ALERTE_DEF_CHANNEL_ID=1264140175395655712" >> .env
          echo "OWNER_ID=486652069831376943" >> .env
          echo "DEV_MODE=False" >> .env
          cat .env
          
      # Step 7: Run the bot with keep-alive
      - name: Run the bot
        run: |
          # Import the keep-alive module in the main script
          sed -i '1s/^/import keep_alive\n/' main.py
          
          # Run the bot with timeout to restart every 45 minutes (GitHub Actions max is 6 hours)
          timeout 2700 python main.py || echo "Bot timeout reached, workflow will restart"
